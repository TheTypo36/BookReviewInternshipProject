generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

//because we want a admin type of user and normal user so we are defining a enum of it

enum Role{
    USER
    ADMIN
}



model Book{
  id                Int @default(autoincrement()) @unique
  title             String 
  country           String
  coverImg          String
  Language          String
  Author            String
  Year              String
  page              Int
  Link              String
  addedBy           Int  //admin who added this book
  reviews           Review[]
  admin              User @relation(fields: [addedBy], references: [id]) // foreign key to user's id
  createdAt          DateTime @default(now())
  readList          ReadList[]  //every readlist whose part is this book
}

model User{
  id            Int @default(autoincrement()) @unique
  name          String
  email         String @unique
  password      String
  role          Role @default(USER)
  books         Book[] 
  reviews       Review[]
  readList      ReadList[]
  refreshToken  String
  createdAt     DateTime @default(now())
}

model Review{
    id            Int @default(autoincrement()) @unique
    content       String
    createdAt     DateTime @default(now())
    rating        Int
    userId        Int
    bookId        Int
    book          Book @relation(fields: [bookId], references: [id]) //foreign key to book's id
    user          User @relation(fields: [userId], references: [id]) //foreign key to user's id
}

model ReadList{
    id       Int @default(autoincrement()) @unique
    userId   Int
    bookId   Int

    user    User @relation(fields: [userId], references: [id])
    book    Book @relation(fields: [bookId], references: [id])

    //one book only time in user List 
    @@unique([userId,bookId])
}